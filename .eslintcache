[{"/home/medch/Desktop/Web DEV/React/resume/src/index.js":"1","/home/medch/Desktop/Web DEV/React/resume/src/App.js":"2","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Profile/Profile.js":"3","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Header/Header.js":"4","/home/medch/Desktop/Web DEV/React/resume/src/pages/Resume/Resume.js":"5","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Footer/Footer.js":"6","/home/medch/Desktop/Web DEV/React/resume/src/pages/Portfolio/Portfolio.js":"7","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Button/CustomButton.js":"8","/home/medch/Desktop/Web DEV/React/resume/src/utils/resemeData.js":"9","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Timeline/Timeline.js":"10"},{"size":434,"mtime":1610400464415,"results":"11","hashOfConfig":"12"},{"size":1124,"mtime":1610560553919,"results":"13","hashOfConfig":"12"},{"size":2553,"mtime":1610400464415,"results":"14","hashOfConfig":"12"},{"size":1976,"mtime":1610400464415,"results":"15","hashOfConfig":"12"},{"size":9534,"mtime":1610664916285,"results":"16","hashOfConfig":"12"},{"size":770,"mtime":1610400464415,"results":"17","hashOfConfig":"12"},{"size":157,"mtime":1610400464415,"results":"18","hashOfConfig":"12"},{"size":430,"mtime":1610400464415,"results":"19","hashOfConfig":"12"},{"size":5005,"mtime":1610657469056,"results":"20","hashOfConfig":"12"},{"size":1690,"mtime":1610400464415,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n0upp4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/home/medch/Desktop/Web DEV/React/resume/src/index.js",[],["48","49"],"/home/medch/Desktop/Web DEV/React/resume/src/App.js",[],"/home/medch/Desktop/Web DEV/React/resume/src/componnents/Profile/Profile.js",["50"],"import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport CustomTimeline, { CustomTimelineSeparator } from '../Timeline/Timeline'\n\nimport CustomButton from '../Button/CustomButton'\n\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport './Profile.css'\nimport image from '../../assets/images/DS.jpg'\nimport { resumeData } from '../../utils/resemeData'\nimport TimelineItem from '@material-ui/lab/TimelineItem'\nimport TimelineContent from '@material-ui/lab/TimelineContent'\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\n\n\n\n\nconst CustomTimelineItem = ({ title, text, link }) => {\n    return <TimelineItem>\n        <CustomTimelineSeparator />\n        <TimelineContent className='timeline_content'>\n\n            {link ?\n                (<Typography className='timelineItem_text'>\n                    <span >{title}:</span> <a href={link} target='_blank'>{text}</a>\n                </Typography>) :\n                (<Typography className='timelineItem_text'>\n                    <span>{title}:</span> {text}\n                </Typography>)}\n\n        </TimelineContent>\n    </TimelineItem >\n}\n\n\n\nfunction Profile() {\n    const { name, title } = resumeData;\n    return (\n        <div className=\"profile container_shadow\">\n            <div className=\"profile_name\">\n                <Typography className=\"name\">{name}</Typography>\n                <Typography className=\"title\">{title}</Typography>\n            </div>\n\n            <div className=\"profile_image\">\n                <img src={image} alt=\"\" />\n            </div>\n\n            <div className=\"profile_informations\">\n                <CustomTimeline icon={<PersonOutlineIcon />}  >\n                    <CustomTimelineItem title=\"Name\" text={name} />\n                    <CustomTimelineItem title=\"Birthday\" text={resumeData.birthday} />\n                    <CustomTimelineItem title=\"Phone\" text={resumeData.phone} />\n                    <CustomTimelineItem title=\"Email\" text={resumeData.email} />\n\n                    {\n                        Object.keys(resumeData.socials).map(key => (\n                            <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link} />\n                        ))\n                    }\n\n                </CustomTimeline>\n                <div className=\"button_container\" style={{ display: 'flex' }}>\n                    <CustomButton text=\"Download cv\" icon={<GetAppIcon />} />\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Header/Header.js",["51","52","53","54","55","56","57","58","59"],"import React from 'react'\n\nimport {\n    Button, Form, FormControl, Nav, Navbar, NavDropdown\n} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HomeRounded, SchoolRounded, Telegram } from \"@material-ui/icons\";\nimport { Link, NavLink, withRouter } from 'react-router-dom'\n\nimport CustomButton from '../Button/CustomButton'\nimport { resumeData } from '../../utils/resemeData'\n\nimport './Header.css'\n\nfunction Header(props) {\n    const pathName = props?.location?.pathname;\n    return (\n\n        <Navbar sticky=\"top\" className=\"header\" expand=\"lg\">\n            <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\n                <Navbar.Brand href=\"#home\" className=\"header_home\">\n                    <HomeRounded />\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle />\n\n            <Navbar.Collapse>\n                <Nav className=\"header_left\">\n                    {/* Resume */}\n                    <Nav.Link\n                        as={NavLink}\n                        to=\"/\"\n                        className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}>\n                        Resume\n                </Nav.Link>\n                    {/* portfolio */}\n                    <Nav.Link\n                        as={NavLink}\n                        to=\"/portfolio\"\n                        className={pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"}>\n                        Portfolio\n                </Nav.Link>\n                </Nav>\n\n                <div className=\"header_right\">\n                    {Object.keys(resumeData.socials).map((key) => (\n                        <a href={resumeData.socials[key].link} target=\"_blank\"> {resumeData.socials[key].icon}</a>\n                    ))}\n\n                    <CustomButton text='Hire Me' icon={<Telegram />} />\n                </div>\n\n            </Navbar.Collapse>\n\n        </Navbar>\n\n    );\n}\n\nexport default withRouter(Header);\n","/home/medch/Desktop/Web DEV/React/resume/src/pages/Resume/Resume.js",["60"],"import { Grid, Icon, Paper, Typography, TextField } from '@material-ui/core'\nimport React from 'react'\n\nimport CustomTimeline, { CustomTimelineSeparator } from '../../componnents/Timeline/Timeline'\n\nimport WorkIcon from '@material-ui/icons/Work'\nimport SchoolIcon from '@material-ui/icons/School';\nimport CustomButton from '../../componnents/Button/CustomButton'\n\nimport { resumeData } from '../../utils/resemeData'\nimport './Resume.css'\nimport TimelineItem from '@material-ui/lab/TimelineItem'\nimport TimelineDot from '@material-ui/lab/TimelineDot'\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\"\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineContent from '@material-ui/lab/TimelineContent'\n\n\nfunction Resume() {\n    return (\n        <>\n\n            {/*  About me */}\n            <Grid container className=\"section pb_45 pt_45\">\n                <Grid item className=\"section_title mb_30\" >\n                    <span></span>\n                    <h6 className=\"section_title_text\">About Me</h6>\n                </Grid>\n                <Grid itemm xs={12}>\n                    <Typography variant=\"body2\" className=\"aboutme_text\">{resumeData[\"about\"]}</Typography>\n                </Grid>\n\n            </Grid>\n\n            {/* Education & experience */}\n            <Grid container className=\"section pb_45\">\n                <Grid item className=\"section_title mb_30\" >\n                    <span></span>\n                    <h6 className=\"section_title_text\">Resume</h6>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container className=\"resume_timeline\" >\n                        {/* Expeience */}\n                        <Grid item sm={12} md={6} >\n                            <CustomTimeline title=\"Work Experience\" icon={<WorkIcon />}>\n                                {resumeData.experiences.map((experience) => (\n                                    <TimelineItem>\n                                        <TimelineSeparator className=\"separator_padding\">\n                                            <TimelineDot variant=\"outlined\" className=\"timeline_dot\" />\n\n                                            <TimelineConnector />\n\n                                        </TimelineSeparator>\n\n                                        <TimelineContent className=\"timeline_content\">\n                                            <Typography className=\"timeline_title\">{experience.title}</Typography>\n                                            <Typography variant=\"caption\" className=\"timeline_date\">{experience.date}</Typography>\n                                            <Typography variant=\"body2\" className=\"timeline_description\">{experience.description}</Typography>\n                                        </TimelineContent>\n                                    </TimelineItem>\n                                ))}\n                            </CustomTimeline>\n                        </Grid>\n                        {/* Education */}\n                        <Grid item sm={12} md={6} >\n                            <CustomTimeline title=\"Education History\" icon={<SchoolIcon />}>\n                                {resumeData.educations.map((education) => (\n                                    <TimelineItem>\n                                        <TimelineSeparator className=\"separator_padding\">\n                                            <TimelineDot variant=\"outlined\" className=\"timeline_dot\" />\n\n                                            <TimelineConnector />\n\n                                        </TimelineSeparator>\n\n                                        <TimelineContent className=\"timeline_content\">\n                                            <Typography className=\"timeline_title\">{education.title}</Typography>\n                                            <Typography variant=\"caption\" className=\"timeline_date\">{education.date}</Typography>\n                                            <Typography variant=\"body2\" className=\"timeline_description\">{education.description}</Typography>\n                                        </TimelineContent>\n                                    </TimelineItem>\n                                ))}\n                            </CustomTimeline>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {/* Services */}\n            <Grid container className=\"section pb_45\">\n                <Grid item className=\"section_title mb_30\" >\n                    <span></span>\n                    <h6 className=\"section_title_text\">Services</h6>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={3} justify=\"space-around\">\n                        {resumeData.services.map(service => (\n                            <Grid item xs={12} sm={6} md={3}>\n                                <div className=\"service\">\n\n                                    <Icon className=\"service_icon\" >{service.icon}</Icon>\n                                    <Typography className=\"service_title\" variant='h6'>{service.title}</Typography>\n                                    <Typography className=\"service_description\" variant='body2'>{service.description}</Typography>\n                                </div>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {/* Skills */}\n            <Grid container\n\n                justify=\"space-between\"\n                className=\"section graybg pb_45 p_50\">\n\n                <Grid item xs={12}>\n                    <Grid container justify=\"space-between\" spacing={3}>\n                        {resumeData.skills.map(skill => (\n                            <Grid item xs={12} sm={6} md={3} >\n                                <Paper elevation={0} className=\"skill\">\n                                    <Typography variant=\"h6\" className=\"skill_title\">\n                                        {skill.title}\n                                    </Typography>\n                                    {skill.description.map(elm => (\n                                        <Typography variant=\"body2\" className=\"skill_decription\">\n                                            <TimelineDot variant={\"outlined\"} className=\"timeline_dot\" />\n                                            {elm}\n                                        </Typography>\n\n                                    ))}\n                                </Paper>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n\n\n\n            </Grid>\n\n            {/* Contact */}\n            <Grid container className=\"section pb_45 pt_45\" spacing={5}>\n                {/* Contact form     */}\n                <Grid item xs={12} lg={7}>\n                    <Grid item className=\"section_title mb_30\" >\n                        <span></span>\n                        <h6 className=\"section_title_text\">Contact Form</h6>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12} sm={6} spacing={2}>\n                                <TextField fullWidth name='name' label=\"Name\" />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField fullWidth name='email' label=\"Email\" />\n                            </Grid>\n                            <Grid item xs={12} >\n                                <TextField fullWidth name='message' label=\"Message\" multiline rows={4} />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <CustomButton text='Submit' />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                {/* Contact information */}\n                <Grid item xs={12} lg={5}>\n                    <Grid container>\n                        <Grid item className=\"section_title mb_30\" >\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Information</h6>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <Typography className=\"contact_info_item\">\n                                        <span>Adress: </span>{resumeData.address}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography className=\"contact_info_item\">\n                                        <span>Phone: </span>{resumeData.phone}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <Typography className=\"contact_info_item\">\n                                        <span>Email: </span>{resumeData.email}\n                                    </Typography>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n\n            </Grid>\n\n\n        </>\n    )\n}\n\nexport default Resume\n","/home/medch/Desktop/Web DEV/React/resume/src/componnents/Footer/Footer.js",["61"],"import { Typography } from '@material-ui/core'\nimport React from 'react';\n\nimport { resumeData } from '../../utils/resemeData'\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_left\">\n                <Typography className=\"footer_name\">{resumeData.name}</Typography>\n            </div>\n            <div className=\"footer_right\">\n                <Typography className=\"footer_copyright\">\n                    Developed by <a href=\"/\" target=\"_blank\">{resumeData.name}</a>\n                    <br />\n                    Clone idea from{\"\"}\n                    <a href=\"\" target=\"_blank\" >Travonline</a>\n                </Typography>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/home/medch/Desktop/Web DEV/React/resume/src/pages/Portfolio/Portfolio.js",[],"/home/medch/Desktop/Web DEV/React/resume/src/componnents/Button/CustomButton.js",[],"/home/medch/Desktop/Web DEV/React/resume/src/utils/resemeData.js",[],"/home/medch/Desktop/Web DEV/React/resume/src/componnents/Timeline/Timeline.js",["62"],"import React from 'react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Typography from '@material-ui/core/Typography'\n\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport './Timeline.css'\n\nfunction CustomTimeline({ title, icon, children }) {\n    return (\n        <Timeline className={'timeline'}>\n            {/* item Header */}\n            <TimelineItem className={'timeline_firstItem'}>\n                <TimelineSeparator>\n                    <TimelineDot className={'timeline_dot_header'} >\n                        {icon}\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Typography variant='h6' className={'timeline_header'}>{title}</Typography>\n                </TimelineContent>\n            </TimelineItem>\n\n            {children}\n            {/* Remaining items */}\n            {/* <TimelineItem>\n                <CustomTimelineSeparator />\n                <TimelineContent>Code</TimelineContent>\n            </TimelineItem> */}\n\n        </Timeline>\n    )\n}\n\n\n\nexport const CustomTimelineSeparator = () => {\n    return <TimelineSeparator className={'separator_padding'}>\n        <TimelineDot variant={\"outlined\"} className={'timeline_dot'} />\n        <TimelineConnector />\n    </TimelineSeparator>\n}\n\n\n\n\nexport default CustomTimeline\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":26,"column":59,"nodeType":"69","endLine":26,"endColumn":74},{"ruleId":"70","severity":1,"message":"71","line":4,"column":5,"nodeType":"72","messageId":"73","endLine":4,"endColumn":11},{"ruleId":"70","severity":1,"message":"74","line":4,"column":13,"nodeType":"72","messageId":"73","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"75","line":4,"column":19,"nodeType":"72","messageId":"73","endLine":4,"endColumn":30},{"ruleId":"70","severity":1,"message":"76","line":4,"column":45,"nodeType":"72","messageId":"73","endLine":4,"endColumn":56},{"ruleId":"70","severity":1,"message":"77","line":7,"column":23,"nodeType":"72","messageId":"73","endLine":7,"endColumn":36},{"ruleId":"70","severity":1,"message":"78","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":34,"column":45,"nodeType":"81","messageId":"82","endLine":34,"endColumn":47},{"ruleId":"79","severity":1,"message":"80","line":41,"column":45,"nodeType":"81","messageId":"82","endLine":41,"endColumn":47},{"ruleId":"67","severity":1,"message":"68","line":48,"column":64,"nodeType":"69","endLine":48,"endColumn":79},{"ruleId":"70","severity":1,"message":"83","line":4,"column":26,"nodeType":"72","messageId":"73","endLine":4,"endColumn":49},{"ruleId":"84","severity":1,"message":"85","line":18,"column":21,"nodeType":"86","endLine":18,"endColumn":49},{"ruleId":"70","severity":1,"message":"87","line":10,"column":8,"nodeType":"72","messageId":"73","endLine":10,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'SchoolRounded' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CustomTimelineSeparator' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'WorkIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]